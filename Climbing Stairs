Approach 1

class Solution {
    public int climbStairs(int n) {
        int[] dp = new int[n+1];
        dp[0]=1;
        dp[1]=1;
        return rec(n,dp);
    }
    int rec(int n,int[] dp) {
        if(n==1)
            return 1;
        if(dp[n] != -1)
            return dp[n];
        dp[n] = rec(n-2,dp) + rec(n-1,dp);
        return dp[n];
    }
}

Approach 2

class Solution {
    public int climbStairs(int n) {
        int p1 = 1, p2 = 1, sum = 0;
        for(int k=2; k<=n;k++) {
            sum = p1+p2;
            p2 = p1;
            p1 = sum;
        }
        return p1;
    }
}
